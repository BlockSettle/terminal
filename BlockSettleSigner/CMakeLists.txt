PROJECT( ${SIGNER_APP_NAME} )

configure_file(SignerVersion.h.in SignerVersion.h)

SET(SOURCES
   main.cpp
   HeadlessApp.cpp
   HeadlessSettings.cpp
   SignerAdapterListener.cpp
)

SET(HEADERS
   HeadlessApp.h
   HeadlessSettings.h
   SignerAdapterListener.h
)

INCLUDE_DIRECTORIES( ${COMMON_LIB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_NETWORK_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_COMMON_ENUMS_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_COMMUNICATION_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_STORAGE_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${WALLET_LIB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${CRYPTO_LIB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${PATH_TO_GENERATED} )
INCLUDE_DIRECTORIES( ${NETTY_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_TERMINAL_API_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${MARKET_ENUMS_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BOTAN_INCLUDE_DIR} )

IF ( APPLE )
   ADD_EXECUTABLE(${SIGNER_APP_NAME} ${SOURCES} ${HEADERS})
ELSEIF ( WIN32 )
   ADD_EXECUTABLE(${SIGNER_APP_NAME} WIN32 ${SOURCES} ${HEADERS} blocksettle.rc)
ELSE ()
   ADD_EXECUTABLE(${SIGNER_APP_NAME} ${SOURCES} ${HEADERS})
ENDIF ()

TARGET_LINK_LIBRARIES( ${SIGNER_APP_NAME}
   ${BS_NETWORK_LIB_NAME}
   ${CPP_WALLET_LIB_NAME}
   ${CRYPTO_LIB_NAME}
   ${BOTAN_LIB}
   ${ZMQ_LIB}
   ${OS_SPECIFIC_LIBS}
   ${QT_LINUX_LIBS}
   Qt5::Network
   Qt5::Core
   ${OPENSSL_LIBS}
)

ADD_SUBDIRECTORY(interfaces)
